name: CI for YARN dev tools (pip)
on: [push]

defaults:
  run:
    working-directory: ./

jobs:
  build:
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +%Y%m%d_%H%M%S)"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          # install black if available (Python 3.6 and above), and autopep8 for testing the pipe mode
          pip install black || true
          pip install autopep8 || true
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Install from source (required for the pre-commit tests)
        run: pip install .
      - name: Test with pytest
        run: pytest --doctest-ignore-import-errors --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=./ --cov-report=xml --cov-report=html
        env:
          MAIL_ACC_USER: test_mail_acc_user
          MAIL_ACC_PASSWORD: test_mail_acc_pass
          TEST_EXEC_MODE: upstream
          IGNORE_SMTP_AUTH_ERROR: 1
          PROJECT_DETERMINATION_STRATEGY: common_file
      - name: Upload coverage
        uses: codecov/codecov-action@v1
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          # Apparently, default working directory is only used by 'run' actions, see: https://stackoverflow.com/a/58231340/1106893
          path: ./junit/test-results-${{ matrix.python-version }}.xml
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Upload all created log files and project basedirs
        uses: actions/upload-artifact@v2
        with:
          name: all_logs_and_project_data__date-${{ steps.date.outputs.date }}_run-${{ github.run_number }}_attempt-${{ github.run_attempt }}
          path: ${{ github.workspace }}/yarndevtools_export
          if-no-files-found: error
        if: ${{ always() }}
